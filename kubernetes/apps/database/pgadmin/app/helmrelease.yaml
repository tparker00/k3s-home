---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app pgadmin
  namespace: database
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 5050
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
    controllers:
      pgadmin:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: registry.samipsolutions.fi/docker/dpage/pgadmin4
              tag: 8.6
            envFrom:
              - secretRef:
                  name: pgadmin-secret
            resources:
              requests:
                memory: 300Mi
              limits:
                memory: 1G
    service:
      app:
        controller: pgadmin
        ports:
          http:
            port: 80
    ingress:
      app:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /var/lib/pgadmin
      oauthconfig:
        enabled: true
        type: configMap
        name: pgadmin-local-config-configmap
        globalMounts:
          - path: /pgadmin4/config_local.py
            subPath: config_local.py
            readOnly: true
      nas-backups:
        enabled: true
        type: hostPath
        hostPath: ${SECRET_MFS_POSTGRES:=temp}
        globalMounts:
          - path: /backups
