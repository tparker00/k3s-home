---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 4.6.3@sha256:a4ad890e8c4a287c17d12ca22eb1d84a046aba2efbd882bf7d6eb12459f6a70c
            env:
              TZ: ${TIMEZONE}
              QBITTORRENT__PORT: &port 80
              QBITTORRENT__BT_PORT: &bittorrentPort 50413
              QBT_Preferences__WebUI__AlternativeUIEnabled: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                10.42.0.0/16, 192.168.1.0/24
              QBT_Preferences__WebUI__LocalHostAuth: false
              QBT_BitTorrent__Session__Interface: eth0
              QBT_BitTorrent__Session__InterfaceAddress:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              QBT_BitTorrent__Session__InterfaceName: eth0
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 16Gi
          gluetun:
            dependsOn: main
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.37.0
            env:
              - VPN_SERVICE_PROVIDER=protonvpn
            envFrom:
              - secretRef:
                  name: gluetun-secret
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
          port-forward:
            dependsOn: gluetun
            image:
              repository: docker.io/snoringdragon/gluetun-qbittorrent-port-manager
              tag: "1.0"
            env:
              - name: QBITTORRENT_SERVER
                value: localhost
              - name: QBITTORRENT_PORT
                value: *port
              - name: PORT_FORWARDED
                value: "/tmp/gluetun/forwarded_port"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups: [10000]
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        controller: main
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 10.10.5.9
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host qb.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent
        globalMounts:
          - path: /config
      data:
        enabled: true
        type: hostPath
        hostPath: ${SECRET_MFS_DATA:=temp}
        globalMounts:
          - path: /media
      gluetun-data:
        type: emptyDir
        advancedMounts:
          main:
            gluetun:
              - path: /tmp/gluetun
            port-forward:
              - path: /tmp/gluetun
                readOnly: true
