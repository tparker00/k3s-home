---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app whisparr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      whisparr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/tparker00/postgres-init
              tag: 16.2@sha256:d366b3d2a1e1ffca914fe3f68f9beca9f21b37263b7e82e38c0e83a132461e0c
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: whisparr-secret
        containers:
          main:
            image:
              repository: ghcr.io/h3mmy/whisparr-nightly
              tag: 2.0.0.355@sha256:6e10e234fc29d3b48fef8b8d5e4aeabe2dd18e5f053736bb9fdc27d2238beb4a
            env:
              TZ: ${TIMEZONE}
              PUID: 568
              PGID: 568
              WHISPARR__INSTANCE_NAME: Whisparr
              WHISPARR__PORT: &port 80
              WHISPARR__LOG_LEVEL: info
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 1000Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        controller: *app
        primary: true
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/whisparr/nord.css"></body>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        enabled: true
        existingClaim: *app
      data:
        enabled: true
        type: hostPath
        hostPath: ${SECRET_MFS_DATA:=temp}
        globalMounts:
          - path: /data
