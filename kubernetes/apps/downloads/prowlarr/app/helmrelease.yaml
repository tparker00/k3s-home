# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
          prometheus.io/scrape: "true"
          prometheus.io/port: "monitoring"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: prowlarr-secret
        containers:
          main:
            nameOverride: *app
            image:
              repository: ghcr.io/joryirving/prowlarr-develop
              tag: 1.14.0.4286@sha256:0c1c29f8693b5440ccf262204706711df6588c88ddcd374fbd9283034d5c35ff
            env:
              TZ: ${TIMEZONE}
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 80
              PROWLARR__LOG_LEVEL: info
              PROWLARR__AUTHENTICATION_METHOD: External
            envFrom: *envFrom
            resources:
              requests:
                cpu: 10m
                memory: 500Mi
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
          secondary:
            image:
              repository: ghcr.io/joryirving/exportarr
              tag: v2.0.0
              pullPolicy: IfNotPresent
            env:
              - name: PORT
                value: &metricsPort 9794
            envFrom: *envFrom
            args: ["prowlarr"]
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    service:
      main:
        ports:
          http:
            port: *port
      secondary:
        nameOverride: metrics
        controller: main
        ports:
          metrics:
            port: *metricsPort
    serviceMonitor:
      main:
        enabled: true
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 20s
        serviceName: prowlarr-metrics
    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Downloads
          gethomepage.dev/name: Prowlarr
          gethomepage.dev/icon: prowlarr.png
          gethomepage.dev/description: Torrent/NZB Indexer Management
          gethomepage.dev/widget.type: prowlarr
          gethomepage.dev/widget.url: http://prowlarr.downloads
          gethomepage.dev/widget.key: "{{HOMEPAGE_VAR_PROWLARR_TOKEN}}"
        hosts:
        - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
            service:
              name: main
              port: http
        tls:
        - hosts:
          - *host
    persistence:
      config:
        enabled: true
        type: emptyDir
      tmp:
        type: emptyDir
