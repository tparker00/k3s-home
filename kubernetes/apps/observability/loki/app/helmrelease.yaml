# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app loki
spec:
  interval: 15m
  chart:
    spec:
      chart: loki
      version: 6.5.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
  - name: local-path-provisioner
    namespace: storage
  values:
    image:
      repository: grafana/loki
      tag: 3.0.0
    deploymentMode: SimpleScalable
    loki:
      ingester:
        chunk_encoding: snappy
      schemaConfig:
        configs:
          - from: "2024-04-20"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      storage:
        type: s3
        s3:
          s3ForcePathStyle: true
          insecure: false
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
        limits_config:
          ingestion_rate_mb: 64
          ingestion_burst_size_mb: 256
          max_query_parallelism: 100
          per_stream_rate_limit: 64M
          per_stream_rate_limit_burst: 128M
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          retention_period: 30d
          shard_streams:
            enabled: true
          split_queries_by_interval: 1h
        compactor:
          working_directory: /var/loki/compactor/retention
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
          delete_request_store: s3
        query_scheduler:
          max_outstanding_requests_per_tenant: 4096
        frontend:
          query_stats_enabled: true
          max_outstanding_per_tenant: 4096
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://alertmanager.observability.svc.cluster.local:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
        analytics:
          reporting_enabled: false
      podAnnotations:
        secret.reloader.stakater.com/reload: loki-secret

    gateway:
      replicas: 3
      image:
        registry: ghcr.io
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
        - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - *host
    read:
      replicas: 3
      persistence:
        storageClass: local-hostpath
      extraVolumeMounts:
      - name: rules
        mountPath: /rules
      extraVolumes:
      - name: rules
        emptyDir: {}
    write:
      replicas: 3
      persistence:
        storageClass: local-hostpath
    backend:
      replicas: 3
      persistence:
        storageClass: moosefs-storage
      extraVolumeMounts:
      - name: rules
        mountPath: /rules/fake
      - name: scratch
        mountPath: /tmp/scratch
      extraVolumes:
      - name: rules
        configMap:
          name: loki-alerting-rules
      - name: scratch
        emptyDir: {}
    lokiCanary:
      enabled: false
    test:
      enabled: false
  valuesFrom:
  - targetPath: loki.storage.bucketNames.chunks
    kind: Secret
    name: loki-secret
    valuesKey: BUCKET_NAME
  - targetPath: loki.storage.bucketNames.ruler
    kind: Secret
    name: loki-secret
    valuesKey: BUCKET_NAME
  - targetPath: loki.storage.bucketNames.admin
    kind: Secret
    name: loki-secret
    valuesKey: BUCKET_NAME
  - targetPath: loki.storage.s3.endpoint
    kind: Secret
    name: loki-secret
    valuesKey: BUCKET_HOST
  - targetPath: loki.storage.s3.accessKeyId
    kind: Secret
    name: loki-secret
    valuesKey: AWS_ACCESS_KEY_ID
  - targetPath: loki.storage.s3.secretAccessKey
    kind: Secret
    name: loki-secret
    valuesKey: AWS_SECRET_ACCESS_KEY
